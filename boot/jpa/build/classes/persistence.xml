<?xml version="1.0" encoding="UTF-8"?>
<persistence version="3.0"
             xmlns="https://jakarta.ee/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence http://jakarta.ee/xml/ns/persistence/persistence_3_0.xsd">
    <persistence-unit name="jpa1">
        <properties>
            <property name="jakarta.persistence.jdbc.driver" value="org.mariadb.jdbc.Driver"/>
            <property name="jakarta.persistence.jdbc.url" value="jdbc:mariadb://localhost:3306/db1"/>
            <property name="jakarta.persistence.jdbc.user" value="root"/>
            <property name="jakarta.persistence.jdbc.password" value="mariadb"/>
<!--            <property name="hibernate.dialect" value=""/>-->
            <!-- hibernate 가 이행하는 db 작업을 sql 문으로 볼 수 있게 해주는 설정 -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>
            <!--
              create : 엔티티 객체를 시작할 때마다 테이블을 새로 만든다. (이미 있는 경우 삭제 후 새로 다시 만든다)
              create-drop : create 와 같으나 애플리케이션 종료 시 테이블 삭제
              update : ddl 문의 변경이 필요한 경우 모두 업데이트가 일어난다.
              validate 는 기존 테이블 구조를 변경시키지 않고 CRUD 가 일어난다. 기존 테이블 구조와 맞지 않는 경우 에러. (실제 개발할 때 이 모드로 사용)
            -->
            <property name="hibernate.hbm2ddl.auto" value="validate"/>
        </properties>
    </persistence-unit>
</persistence>